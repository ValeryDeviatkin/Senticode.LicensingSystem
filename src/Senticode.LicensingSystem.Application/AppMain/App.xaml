<Application x:Class="Senticode.LicensingSystem.Application.AppMain.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:Senticode.LicensingSystem.Application.Converters"
             xmlns:e="clr-namespace:Senticode.LicensingSystem.Application.Extensions"
             StartupUri="../Views/MainWindow.xaml">

    <Application.Resources>

        <ControlTemplate x:Key="GridViewColumnHeaderTemplate" TargetType="GridViewColumnHeader">
            <Grid Background="#E8E8E8">
                <Border BorderThickness="1" BorderBrush="Black" Padding="10">
                    <Label Content="{TemplateBinding Content}" />
                </Border>
            </Grid>
        </ControlTemplate>

        <Style TargetType="Control">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Background" Value="#E8E8E8" />
        </Style>

        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="CheckBox" />
        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="MenuItem" />
        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="DatePicker" />

        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="GroupBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="6">
                                <ColorAnimation
                                    Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                    Duration="0:0:01"
                                    To="BlueViolet" />
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="BorderThickness"
                                    Duration="0:0:1"
                                    To="2" />
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="Padding"
                                    Duration="0:0:1"
                                    To="2" />
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    Duration="0:0:1"
                                    To="3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="6">
                                <ColorAnimation
                                    Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
                                    Duration="0:0:1"
                                    To="Black" />
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="BorderThickness"
                                    Duration="0:0:1"
                                    To="1" />
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="Padding"
                                    Duration="0:0:1"
                                    To="0" />
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    Duration="0:0:1"
                                    To="5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>

        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="ComboBox">
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>

        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="GridViewColumnHeader">
            <Setter Property="Template" Value="{StaticResource GridViewColumnHeaderTemplate}" />
            <Setter Property="Margin" Value="2 0 2 5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="SizeAll" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="Label">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>


        <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="TextBox">
            <Setter Property="MaxLength" Value="49" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors), Converter={c:ErrorListConverter}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="BorderBrush" Value="Red" />
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="Background" Value="Black" />
        </Style>

        <ControlTemplate x:Key="ValidationFailed">
            <StackPanel Orientation="Horizontal">
                <TextBlock Foreground="Red" FontSize="20" FontWeight="Bold" Margin="1">!</TextBlock>
                <Border BorderThickness="1" BorderBrush="Red">
                    <AdornedElementPlaceholder />
                </Border>
            </StackPanel>
        </ControlTemplate>

        <DataTemplate x:Key="FilterTemplate">
            <Label Content="{e:Localize Binding={Binding}}" />
        </DataTemplate>

    </Application.Resources>
</Application>